name: ci_night

# on events
on:
  schedule:
    - cron: '0/15 11 * * 1-5'

# jobs
jobs:
  build:
    name: build image
    runs-on: ubuntu-latest
    outputs:
      build_result: ${{ steps.build.outcome }}
    strategy:
      matrix:
        target: ['host-pc', 'ia32-generic'] #'armv7a7-imx6ull', 'armv7a9-zynq7000', 'armv7m7-imxrt106x', 'armv7m7-imxrt117x', 'armv7m4-stm32l4x6', 'host-pc', 'ia32-generic', 'riscv64-spike', 'riscv64-virt']
        include:
          - target: 'ia32-generic'
            syspage: 'psh pc-ata uart16550'
            long_test: 'y'
    steps:
      # step 1: checkout repository code inside the workspace directory of the runner
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # attach GCC problem matcher... might not work because of submodules... just trying
      - uses: ammaraskar/gcc-problem-matcher@master

      # step 2: use our custom action to build the project
      - name: Build
        id: build
        uses: ./.github/actions/phoenix-build
        with:
          target: ${{ matrix.target }}
          syspage: ${{ matrix.syspage }}
          long_test: ${{ matrix.long_test }}
          param1: 'all'

      # step 3: tar rootfs
      - name: Tar rootfs
        working-directory: _fs
        run: tar -cvf ../rootfs-${{ matrix.target }}.tar ${{ matrix.target }}/root

      # step 4: upload "_boot" directory and tarball of rootfs as build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: phoenix-rtos-${{ matrix.target }}
          path: |
            _boot
            rootfs-${{ matrix.target }}.tar

  test-emu:
    needs: build
    name: run tests on emulators
    runs-on: ubuntu-latest
    outputs:
      runner_result: ${{ steps.runner.outcome }}
    strategy:
      matrix:
        target: ['host-pc', 'ia32-generic']

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: phoenix-rtos-${{ matrix.target }}

      - name: Untar rootfs
        working-directory: _fs
        run: tar -xvf ../rootfs-${{ matrix.target }}.tar

      - name: Test runner
        id: runner
        uses: ./.github/actions/phoenix-runner
        with:
          target: ${{ matrix.target }}
          long_test: '--long-test'
